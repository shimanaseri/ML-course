# -*- coding: utf-8 -*-
"""ML_HW_Extra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HF3-ZK3uzywZwTlD4XYiOtNNkRv4bizt
"""

import numpy as np

m, n = 20, 10
A = np.random.rand(m, n)
k = np.random.rand(n)
# Vectorized matrix-vector multiplication
p_vectorized = np.dot(A, k)

p_vectorized

import timeit

# Original for-loop implementation
def original_implementation():
    p = np.zeros(m)
    for i in range(n):
        p += A[:, i] * k[i]
    return p

# Vectorized implementation
def vectorized_implementation():
    return np.dot(A, k)

p_original = original_implementation()
p_vectorized = vectorized_implementation()
results_are_close = np.allclose(p_original, p_vectorized)

original_time = timeit.timeit(original_implementation, number=1000)
vectorized_time = timeit.timeit(vectorized_implementation, number=1000)

print(f"Looped time: {original_time}")
print(f"Vectorized time: {vectorized_time}")
print(f"Are the results close? {results_are_close}")